import { createEnv } from '@t3-oss/env-nextjs'
import { z } from 'zod'

export const env = createEnv({
  server: {
    JWT_ALGORITHM: z.string().min(1),
    JWT_EXPIRY_ACCESS_TOKEN: z.string().min(1),
    JWT_EXPIRY_REFRESH_TOKEN: z.string().min(1),
    JWT_SECRET_KEY: z.string().min(32),
    JWT_PRIVATE_KEY: z.string().startsWith('-----BEGIN PRIVATE KEY-----').endsWith('-----END PRIVATE KEY-----'),
    POSTGRES_USER: z.string().min(1),
    POSTGRES_PASSWORD: z.string().min(1),
    POSTGRES_DB: z.string().min(1),
    POSTGRES_DATABASE: z.string().min(1),
    POSTGRES_HOST: z.string().min(1),
    POSTGRES_URL: z.string().min(1).startsWith('postgres://'),
    POSTGRES_PRISMA_URL: z.string().min(1).startsWith('postgres://'),
    POSTGRES_URL_NON_POOLING: z.string().min(1).startsWith('postgres://'),
    SMTP_FROM: z.string().email(),
    POSTMARK_API_TOKEN: z.string().min(1),
    POSTMARK_SIGN_IN_TEMPLATE: z.string().min(1),
    STRIPE_API_KEY: z.string().min(1).startsWith('sk_live_'),
    STRIPE_WEBHOOK_SECRET: z.string().min(1),
    STRIPE_PRO_MONTHLY_PLAN_ID: z.string().min(1),
    OPENAI_API_KEY: z.string().min(1).startsWith('sk-'),
    OPENAI_ORGANIZATION_ID: z.string().min(1),
  },
  client: {
    NEXT_PUBLIC_APP_URL: z.string().url(),
    NEXT_PUBLIC_JWT_PUBLIC_KEY: z.string().startsWith('-----BEGIN PUBLIC KEY-----').endsWith('-----END PUBLIC KEY-----'),
  },
  runtimeEnv: {
    NEXT_PUBLIC_APP_URL: process.env.NEXT_PUBLIC_APP_URL,
    NEXT_PUBLIC_JWT_PUBLIC_KEY: process.env.NEXT_PUBLIC_JWT_PUBLIC_KEY,
    JWT_ALGORITHM: process.env.JWT_ALGORITHM,
    JWT_EXPIRY_ACCESS_TOKEN: process.env.JWT_EXPIRY_ACCESS_TOKEN,
    JWT_EXPIRY_REFRESH_TOKEN: process.env.JWT_EXPIRY_REFRESH_TOKEN,
    JWT_SECRET_KEY: process.env.JWT_SECRET_KEY,
    JWT_PRIVATE_KEY: process.env.JWT_PRIVATE_KEY,
    POSTGRES_USER: process.env.POSTGRES_USER,
    POSTGRES_PASSWORD: process.env.POSTGRES_PASSWORD,
    POSTGRES_DB: process.env.POSTGRES_DB,
    POSTGRES_DATABASE: process.env.POSTGRES_DATABASE,
    POSTGRES_HOST: process.env.POSTGRES_HOST,
    POSTGRES_URL: process.env.POSTGRES_URL,
    POSTGRES_PRISMA_URL: process.env.POSTGRES_PRISMA_URL,
    POSTGRES_URL_NON_POOLING: process.env.POSTGRES_URL_NON_POOLING,
    SMTP_FROM: process.env.SMTP_FROM,
    POSTMARK_API_TOKEN: process.env.POSTMARK_API_TOKEN,
    POSTMARK_SIGN_IN_TEMPLATE: process.env.POSTMARK_SIGN_IN_TEMPLATE,
    STRIPE_API_KEY: process.env.STRIPE_API_KEY,
    STRIPE_WEBHOOK_SECRET: process.env.STRIPE_WEBHOOK_SECRET,
    STRIPE_PRO_MONTHLY_PLAN_ID: process.env.STRIPE_PRO_MONTHLY_PLAN_ID,
    OPENAI_API_KEY: process.env.OPENAI_API_KEY,
    OPENAI_ORGANIZATION_ID: process.env.OPENAI_ORGANIZATION_ID,
  },
})
